/*
 * MPUAccel.h
 *
 *  Created on: 23/07/2024
 *      Author: Juan Esteban Rodriguez
 *      Mofied : Julian Lopera
 */

#ifndef MPUACCEL_H_
#define MPUACCEL_H_

#include <stm32f4xx.h>
#include <I2CDriver.h>


//----------Definicion de macros-------------
#define ADDRESS_UP          0b1101001         //Direccion del sclave
#define ADDRESS_DOWN        0b1101000

#define ACELERACION  0                        //Magnitud fisica a medir
#define GIROSCOPIO   1

#define RESET (0b1 << 7)                     //bit de reset

//Direccion de los registros del MPU
#define ACCEL_CONFIG  0x1C                         //Direccion de los Registros para la configuracion de los elementos que miden.
#define GIRO_CONFIG   0x1B

#define ACCEL_XOUT_H  0x3B                         //Direccion de los Registros que mide las las diferentes magnitudes fisicas
#define ACCEL_XOUT_L  0x3C
#define ACCEL_YOUT_H  0x3D
#define ACCEL_YOUT_L  0x3E
#define ACCEL_ZOUT_H  0x3F
#define ACCEL_ZOUT_L  0x40

#define PWR_MGMT_l  107                            //Hay un bit en dicho registro para aplicar reset
#define WHO_AM_I    117                            //Registro para verificar la identidad del equipo


//Escalas y sensibilidad de las diferentes magnitudes
#define ACCEL_2G  0                          //Escalas para la aceleracion
#define ACCEL_4G  1
#define ACCEL_8G  2
#define ACCEL_16G 3

#define ACCEL_2G_SENS  16384                //Sensibilidades por rango de aceleraciÃ³n
#define ACCEL_4G_SENS  8192
#define ACCEL_8G_SENS  4096
#define ACCEL_16G_SENS 2048

#define GYRO_250   0                        //Escalas para el GYRO
#define GYRO_500   1
#define GYRO_1000  2
#define GYRO_2000  3

#define GYRO_250_SENS  131                  //Sensibilidades respectivamente por rango de GYRO
#define GYRO_500_SENS  66
#define GYRO_1000_SENS 33
#define GYRO_2000_SENS 16

//Ejes de medicion para cada magnitud fisica
#define ACCEL_X 0                           //Eje de aceleracion en X,Y,Z
#define ACCEL_Y 1
#define ACCEL_Z 2

#define GYRO_X 0                            //Eje de rotacion en X,Y,Z
#define GYRO_Y 1
#define GYRO_Z 2


//Estructura para definir los elementos correspondientes al MPU
typedef struct
{
	uint8_t 		fullScaleACCEL;
	uint8_t 		fullScaleGYRO;
	I2C_Handler_t   *ptrI2Chandler;

}MPUAccel_Config;


//Cabeceras de las funciones la configuracion y adquisicion de datos del MPU
void configMPUAccel (MPUAccel_Config *ptrMPUAccel);

float readAccel_X (MPUAccel_Config *ptrMPUAccel);
float readAccel_Y (MPUAccel_Config *ptrMPUAccel);
float readAccel_Z (MPUAccel_Config *ptrMPUAccel);

float readGyro_X (MPUAccel_Config *ptrMPUAccel);
float readGyro_Y (MPUAccel_Config *ptrMPUAccel);
float readGyro_Z (MPUAccel_Config *ptrMPUAccel);

uint8_t WHOIAM (MPUAccel_Config *ptrMPUAccel);

#endif /* MPUACCEL_H_ */
